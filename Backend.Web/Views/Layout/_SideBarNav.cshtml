@using Abp.Collections.Extensions
@using Backend.Web.Views
@model Backend.Web.Models.Layout.SideBarNavViewModel

@{
    var caculateMenuUrl = new Func<string, string>(url =>
    {
        if (string.IsNullOrEmpty(url))
        {
            return ApplicationPath;
        }

        if (UrlChecker.IsRooted(url))
        {
            return url;
        }

        return ApplicationPath + url;
    });
}
<!-- Sidebar Menu -->
<ul class="sidebar-menu">
    <li class="header">常用模块</li>
    @foreach (var menuItem in Model.UserMenu.Items)
    {
        <li class="@(Model.ActiveMenuItemName.Contains(menuItem.Name) ? "active" : "") treeview">
            @if (menuItem.Items.IsNullOrEmpty())
            {
                <a href="@caculateMenuUrl(menuItem.Url)">
                    <i class="@menuItem.Icon"></i> <span>@menuItem.DisplayName</span>
                    <span class="pull-right-container">
                        <i class="fa fa-angle-left pull-right"></i>
                    </span>
                </a>
            }
            else
            {
                <a href="#">
                    <i class="@menuItem.Icon"></i> <span>@menuItem.DisplayName</span>
                    <span class="pull-right-container">
                        <i class="fa fa-angle-left pull-right"></i>
                    </span>
                </a>
                <ul class="treeview-menu">
                    @foreach (var subMenuItem in menuItem.Items)
                    {
                        <li class="@(Model.ActiveMenuItemName == subMenuItem.Name ? "active" : "")"><a href="@caculateMenuUrl(subMenuItem.Url)"><i class="@subMenuItem.Icon"></i> @subMenuItem.DisplayName</a></li>
                    }
                </ul>
            }
            
        </li>
    }
    
</ul>
<!-- /.sidebar-menu -->